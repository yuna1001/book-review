version: 2.1

executors:
  test_default:
    working_directory: ~/book-review
    docker:
    - image: circleci/python:3.7
      environment:
        PYTHONDONTWRITEBYTECODE: 1
        PYTHONUNBUFFERED: 1
        TZ: Asia/Tokyo
    - image: circleci/postgres:11.2
      environment:
        POSTGRES_USER: postgres
        POSTGRES_DB: postgres
        TZ: Asia/Tokyo
  deploy_default:
    working_directory: ~/book-review
    docker:
    - image: circleci/python:3.7
      environment:
        PYTHONDONTWRITEBYTECODE: 1
        PYTHONUNBUFFERED: 1
        TZ: Asia/Tokyo

commands:
  save_python_package:
    description: "pip install したpackageをキャッシュする"
    steps:
      - save_cache:
          name: Save Python Package
          key: book-review-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
          - /usr/local/bin
          - /usr/local/lib/python3.7/site-packages
  restore_python_package:
    description: "pip install したpackageのキャッシュを読み込む"
    steps:
      - restore_cache:
          name: Restore Python Package
          keys:
          - book-review-{{ .Branch }}-{{ checksum "requirements.txt" }}
          - book-review
  chown_python_package:
    description: "pip install したpackage群の権限をcircleciユーザに変更する"
    steps:
      - run:
          name: Change Owner Python Package Directory
          command: |
            sudo chown -R circleci:circleci /usr/local/bin
            sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
  run_pip_install:
    description: "requirements.txtを元にpip installを実行する"
    steps:
      - run:
          name: Start pip install
          command: |
            pip install -r requirements.txt --user
  db_migrations:
    description: "テスト実行用DBのマイグレーションを行う"
    steps:
      - run:
          name: Start db migrations
          command: |
            python3 manage.py makemigrations --settings=config.settings.circleci_test
            python3 manage.py migrate --settings=config.settings.circleci_test
  run_test:
    description: "テストを実行する"
    steps:
      - run:
          name: Start running test
          command: python3 manage.py test --settings=config.settings.circleci_test


jobs:
  build:
    executor: test_default
    steps:
      - checkout
      - chown_python_package
      - restore_python_package
      - run_pip_install
      - save_python_package
      - db_migrations
      - run_test
  deploy:
    executor: deploy_default
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
          - df:5a:30:ae:d9:15:12:ae:04:f8:70:f7:34:15:f0:0d
      - run:
          name: Start ssh-key-scan
          command: ssh-keyscan ${HOST_NAME} >> ~/.ssh/known_hosts
      - run:
          name: Start install rsync
          command: sudo apt install -y rsync
      - run:
          name: Start rsync
          command: rsync -av --exclude='Dockerfile' --exclude='process.yml'
            --exclude='nginx' --exlude=''docker-compose.yml
            --exclude='Pipfile' --exclude='Pipfile.lock' --exclude='.ssh'
            --exclude='.git' --exclude='.circleci' . ${USER_NAME}@${HOST_NAME}:/home/webapp/mysite
      - run:
          name: Restart service
          command: ssh ${USER_NAME}@${HOST_NAME} "cd /home/webapp/mysite;
            python3 manage.py makemigrations;python3 manage.py migrate;
            sudo systemctl stop mysite.socket;
            sudo systemctl stop mysite; sudo systemctl restart mysite.socket;
            sudo systemctl restart mysite"
workflows:
  version: 2
  build_and_deploy:
    jobs:
    - build
    - deploy:
        filters:
          branches:
            only: master
        requires:
        - build